#user  nobody;
worker_processes  1;

# Logs de erro principais com nível debug
error_log  logs/error.log debug;

#pid        logs/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    
    # Log format personalizado para debug da API
    log_format api_debug '$remote_addr - $remote_user [$time_local] '
                        '"$request" $status $body_bytes_sent '
                        '"$http_referer" "$http_user_agent" '
                        'upstream: "$upstream_addr" status: "$upstream_status" '
                        'response_time: "$upstream_response_time" '
                        'headers: "$sent_http_content_type"';
    
    # Log format para debug geral
    log_format debug_format '$remote_addr - $remote_user [$time_local] '
                           '"$request" $status $body_bytes_sent '
                           '"$http_referer" "$http_user_agent" '
                           'host: "$host" scheme: "$scheme"';
    
    sendfile        on;
    keepalive_timeout  65;

    # Servidor na porta 9000 (original)
    server {
        listen 9000 ssl;
        server_name adm.elcop.eng.br;
        
        # Log de acesso geral
        access_log logs/access.log debug_format;
        
        # Configurações SSL
        ssl_certificate      C:/Users/Administrator/Downloads/cert/adm.elcop.eng.br/fullchain.pem;
        ssl_certificate_key  C:/Users/Administrator/Downloads/cert/adm.elcop.eng.br/privkey.pem;
        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;
        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;
        
        # ==== PROXY PARA API ====
        location /api/ {
            # Logs específicos para API (mantidos para debug)
            access_log logs/api_access.log api_debug;
            error_log logs/api_error.log debug;
            
            # ALTERAÇÃO CRÍTICA: Desativar verificação de certificado SSL no proxy
            proxy_ssl_verify off;
            
            # Configuração para manter /api no caminho
            proxy_pass https://10.10.0.13:80/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Adicionar headers CORS para esta localização específica
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization' always;
            
            # Handler para requisições OPTIONS (necessário para CORS pré-voo)
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
                add_header 'Access-Control-Max-Age' 1728000; # 20 dias
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            
            # Configurações adicionais para evitar problemas de SSL
            proxy_ssl_server_name on;
            proxy_ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
            proxy_ssl_session_reuse on;
        }
        
        # Servir aplicação React
        location / {
            access_log logs/react_access.log debug_format;
            
            root   "C:/Users/Administrator/Desktop/EOperaX/eopera-web-app/build";
            index  index.html index.htm;
            try_files $uri $uri/ /index.html;
            
            # Headers para React
            add_header X-Debug-React "Active" always;
        }
        
        # Página de erro
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
    
    # Servidor na porta 6443 (produção)
    server {
        listen 6443 ssl;
        server_name adm.elcop.eng.br;
        
        # Log de acesso geral
        access_log logs/access_6443.log debug_format;
        
        # Configurações SSL
        ssl_certificate      C:/Users/Administrator/Downloads/cert/adm.elcop.eng.br/fullchain.pem;
        ssl_certificate_key  C:/Users/Administrator/Downloads/cert/adm.elcop.eng.br/privkey.pem;
        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;
        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;
        
        # ==== PROXY PARA API ====
        location /api/ {
            # Logs específicos para API (mantidos para debug)
            access_log logs/api_6443_access.log api_debug;
            error_log logs/api_6443_error.log debug;
            
            # ALTERAÇÃO CRÍTICA: Desativar verificação de certificado SSL no proxy
            proxy_ssl_verify off;
            
            # Configuração para manter /api no caminho
            proxy_pass https://10.10.0.13:80/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Adicionar headers CORS para esta localização específica
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization' always;
            
            # Handler para requisições OPTIONS (necessário para CORS pré-voo)
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
                add_header 'Access-Control-Max-Age' 1728000; # 20 dias
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            
            # Configurações adicionais para evitar problemas de SSL
            proxy_ssl_server_name on;
            proxy_ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
            proxy_ssl_session_reuse on;
        }
        
        # Servir aplicação React
        location / {
            access_log logs/react_6443_access.log debug_format;
            
            root   "C:/Users/Administrator/Desktop/EOperaX/eopera-web-app/build";
            index  index.html index.htm;
            try_files $uri $uri/ /index.html;
            
            # Headers para React
            add_header X-Debug-React "Active" always;
            
            # CORS headers para resolver problemas de solicitações cross-origin
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization' always;
        }
        
        # Página de erro
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}
